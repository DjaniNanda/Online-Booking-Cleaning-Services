# Generated by Django 5.1.7 on 2025-05-06 11:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddonOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('variable_price', models.BooleanField(default=False)),
                ('formula', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(default=1, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255)),
                ('apt', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='QuoteRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('frequency', models.CharField(choices=[('weekly', 'Weekly'), ('biweekly', 'Bi-Weekly'), ('monthly', 'Monthly'), ('onetime', 'One Time(Deep)')], max_length=20)),
                ('squarefeet', models.CharField(choices=[('0 – 500 Sq Ft', '0 – 500 Sq Ft'), ('501 – 1000 Sq Ft', '501 – 1000 Sq Ft'), ('1001 – 1500 Sq Ft', '1001 – 1500 Sq Ft'), ('1501 – 2000 Sq Ft', '1501 – 2000 Sq Ft'), ('2001 – 2500 Sq Ft', '2001 – 2500 Sq Ft'), ('2501 – 3000 Sq Ft', '2501 – 3000 Sq Ft'), ('3001 – 3500 Sq Ft', '3001 – 3500 Sq Ft'), ('3501 – 4000 Sq Ft', '3501 – 4000 Sq Ft'), ('4001 – 4500 Sq Ft', '4001 – 4500 Sq Ft'), ('4501 – 5000 Sq Ft', '4501 – 5000 Sq Ft'), ('5001 – 5500 Sq Ft', '5001 – 5500 Sq Ft'), ('5501 – 6000 Sq Ft', '5501 – 6000 Sq Ft'), ('6001 – 6500 Sq Ft', '6001 – 6500 Sq Ft'), ('6501 – 7000 Sq Ft', '6501 – 7000 Sq Ft'), ('7001 – 7500 Sq Ft', '7001 – 7500 Sq Ft'), ('7501 – 8000 Sq Ft', '7501 – 8000 Sq Ft')], max_length=20)),
                ('bedroom', models.CharField(choices=[('1', '1 Bedroom'), ('2', '2 Bedrooms'), ('3', '3 Bedrooms'), ('4', '4 Bedrooms'), ('5', '5 Bedrooms'), ('6', '6 Bedrooms')], max_length=2)),
                ('bathroom', models.CharField(choices=[('1', 'One Bathroom'), ('2', 'Two Bathroom'), ('3', 'Three Bathroom'), ('4', 'Four Bathroom'), ('5', 'Five Bathroom'), ('6', 'Six Bathroom'), ('7', 'No Bathroom')], max_length=2)),
                ('deluxe_cleaning', models.BooleanField(default=False)),
                ('heavy_duty', models.BooleanField(default=False)),
                ('inside_fridge', models.IntegerField(default=0)),
                ('inside_oven', models.IntegerField(default=0)),
                ('inside_cabinets', models.BooleanField(default=False)),
                ('load_dishwasher', models.BooleanField(default=False)),
                ('handwash_dishes', models.BooleanField(default=False)),
                ('laundry_folding', models.IntegerField(default=0)),
                ('eco_friendly', models.BooleanField(default=False)),
                ('pet_hair_fee', models.BooleanField(default=False)),
                ('change_linen', models.BooleanField(default=False)),
                ('calculated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=100)),
                ('bathrooms', models.IntegerField(default=0)),
                ('bedrooms', models.IntegerField(default=1)),
                ('square_feet', models.CharField(max_length=50)),
                ('frequency', models.CharField(choices=[('ONE_TIME', 'One Time'), ('EVERY_WEEK', 'Every Week(Discount 10%)'), ('EVERY_2_WEEKS', 'Every 2 Weeks(Discount 15%)'), ('EVERY_4_WEEKS', 'Every 4 Weeks(Discount 20%)')], max_length=20)),
                ('service_date', models.DateField()),
                ('time_window', models.CharField(max_length=20)),
                ('is_flexible', models.CharField(default='Not flexible', max_length=50)),
                ('access_method', models.CharField(choices=[('HOME', 'Someone will be home'), ('DOORMAN', 'Doorman'), ('LOCKBOX', 'Key in lockbox'), ('SMART_LOCK', 'Smart lock')], max_length=50)),
                ('access_instructions', models.TextField(blank=True, null=True)),
                ('parking_instructions', models.TextField(blank=True, null=True)),
                ('parking_cost', models.CharField(default='$0', max_length=10)),
                ('condition', models.CharField(blank=True, max_length=100, null=True)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('referral_source', models.CharField(blank=True, max_length=100, null=True)),
                ('tip_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sales_tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.address')),
            ],
        ),
        migrations.CreateModel(
            name='BookingAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.addonoption')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addons', to='api.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('mobile', models.CharField(max_length=20)),
                ('send_text_reminders', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.customer'),
        ),
        migrations.AddField(
            model_name='address',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='api.customer'),
        ),
    ]
